---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "ðŸ§± Python Build"
description: "Build Python Project"

inputs:
  ARTEFACTS:
    description: "Path to Python build artefacts"
    required: true
    default: "dist"

outputs:
  BUILD:
    description: "Build [production|development]"
    value: ${{ steps.build.outputs.publish }}
  DATETIME:
    description: "Date and time stamp for build"
    value: ${{ steps.setenv.outputs.datetime }}

runs:
  using: "composite"
  steps:
    - name: "Populate environment variables"
      id: setenv
      shell: bash
      run: |
        echo "Action triggered by: ${GITHUB_TRIGGERING_ACTOR}"
        echo "Using build artefact path: ${{ inputs.artefacts }}"
        if [ ! -d ${{ inputs.artefacts }} ]; then
          echo -n "Creating directory for artefacts: ${{ inputs.artefacts }} "
          if (mkdir -p ${{ inputs.artefacts }}); then
            echo "SUCCESS"
          else
            echo "FAILED"
            echo "Error: could not create output directory for build artefacts"
            exit 1
          fi
        fi
        datetime=$(date +'%Y-%m-%d-%H%M')
        echo "Build date and time stamp: $datetime"
        echo "datetime=$datetime" >> "$GITHUB_ENV"
        echo "datetime=${datetime}" >> "$GITHUB_OUTPUT"

    - name: "Perform package build"
      id: build
      shell: bash
      run: |
        # Perform package build
        python -m pip install -q --upgrade pip
        if [ -f pyproject.toml ]; then
          echo "Found file: pyproject.toml"
          echo "Building with command: pdm build"
          pdm build --dest ${{ inputs.artefacts }}
        elif [ -f tox.ini ]; then
          echo "Found TOX configuration file: tox.ini"
          echo "Attempting to install TOX..."
          pip install -q --upgrade tox tox-gh-actions
          echo "Attempting build with: tox -e build"
          echo "WARNING: assumes build artefact path is valid"
          tox -e build
        else
          echo "Neither file found: tox.ini/pyproject.toml"
          echo "Attempting build with: python -m build"
          pip -q --upgrade install build
          python -m build --outdir ${{ inputs.artefacts }}
        fi

        # Set build type based on artefact naming
        if test -n "$(find ${{ inputs.artefacts }} -maxdepth 1 -name '**.dev*' -print -quit)"; then
          echo "Artefact naming indicates development build"
          echo "build=development" >> "$GITHUB_ENV"
          echo "build=development" >> "$GITHUB_OUTPUT"
        else
          echo "build=production" >> "$GITHUB_ENV"
          echo "build=production" >> "$GITHUB_OUTPUT"
        fi
