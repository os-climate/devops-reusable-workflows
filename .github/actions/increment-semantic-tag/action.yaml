---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "🏷️ Increment Semantic Tag"

inputs:
  tag:
    description: "The existing semantic tag to be incremented"
    required: true
  type:
    description: "The type of increment to perform [ major|minor|patch ]"
    required: true
    default: "patch"

outputs:
  incremented:
    description: "The incremented semantic tag"
    value: ${{ steps.increment.outputs.incremented }}

runs:
  using: "composite"
  steps:
    - name: "🏷️ Increment tag"
      id: increment-tag
      shell: bash
      run: |
        # Increment semantic tag

        TAG=${{ inputs.tag }}
        TYPE=${{ inputs.type }}

        # Validate increment type
        if	[ ! "$TYPE" = "major" ] && \
            [ ! "$TYPE" = "minor" ] && \
            [ ! "$TYPE" = "patch" ]; then
           echo "Increment type invalid"; exit 1
        fi

        echo "Input tag: $TAG"
        echo "Bump type: $TYPE"

        # Regular expression to match semantic tag
        PATTERN="^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-((0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(\+([0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*))?$"

        # Validate supplied tag
        if ! [[ "$TAG" =~ $PATTERN ]]; then
          echo "Invalid semantic tag"; exit 1
        else
          echo "Supplied tag: $TAG"
        fi

        get_next_version() {

          local RE='[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)'
          local MAJOR=$(echo "$TAG" | sed -e "s#$RE#\1#")
          local MINOR=$(echo "$TAG" | sed -e "s#$RE#\2#")
          local PATCH=$(echo "$TAG" | sed -e "s#$RE#\3#")

          case "$TYPE" in
          major)
            ((MAJOR += 1))
            ((MINOR = 0))
            ((PATCH = 0))
            ;;
          minor)
            ((MINOR += 1))
            ((PATCH = 0))
            ;;
          patch)
            ((PATCH += 1))
            ;;
          esac

          NEXT_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "Incremented tag: $NEXT_VERSION"
        }

        get_next_version
        echo "incremented=${NEXT_VERSION}" >> $GITHUB_OUTPUT
