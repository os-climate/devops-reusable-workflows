---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "🏷️ Latest Semantic Tag"

outputs:
  TAG:
    # A leading non-numeric "v" character will be stripped
    description: "Return the latest semantic tag from repository"
    value: ${{ steps.parse-tags.outputs.tag }}
  VTAG:
    # A leading non-numeric "v" character will be stripped
    description: "The incremented semantic tag [with prefix] e.g. v1.2.3"
    value: ${{ steps.increment.outputs.tag }}

  MISSING:
    description: "Flag set true if no semantic tags found"
    value: ${{ steps.parse-tags.outputs.missing }}

runs:
  using: "composite"
  steps:
    - name: "Fetch tags"
      shell: bash
      run: |
        # Workaround for: https://github.com/actions/checkout/issues/1471
        echo "Fetching tags..."
        git fetch --tags

    - name: "Parse tags"
      id: parse-tags
      shell: bash
      run: |
        # Extract and report latest semantic tag

        #SHELLCODESTART

        if ! (git tag -l | grep 'v*.*.*' > /dev/null); then
          echo "No semantic tags were found"
          echo "missing=true" >> $GITHUB_OUTPUT
          # Set a placeholder value for the tag
          echo "tag=v0.0.0" >> $GITHUB_OUTPUT
          echo "vtag=v0.0.0" >> $GITHUB_OUTPUT
        fi
        TAG=$(git tag -l --sort=committerdate | grep -o '?*.*.*' | sort -r | head -1)

        # If present, strip the leading "v" character
        if [[ "$TAG" == v* ]]; then
          TAG="${TAG:1}"
        fi

        # Regular expression to match semantic tag
        PATTERN="^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-((0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(\+([0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*))?$"

        # Validate supplied (and parsed) tag
        if ! [[ "$TAG" =~ $PATTERN ]]; then
          echo "ERROR: invalid semantic tag"; exit 1
        else
          echo "Numeric value: $TAG"
        fi

        echo "Tag: $TAG [v$TAG]"

        # Allows for testing from a local shell
        if [ -n "$GITHUB_OUTPUT" ]; then
          echo "missing=false" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "vtag=v${TAG}" >> $GITHUB_OUTPUT
        fi

        #SHELLCODEEND
