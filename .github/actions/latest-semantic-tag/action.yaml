---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2024 The Linux Foundation <https://linuxfoundation.org>

name: "🏷️ Latest Semantic Tag"

outputs:
  tag:
    description: "Return the latest semantic tag from repository"
    value: ${{ steps.parse-tags.outputs.tag }}
  missing:
    description: "Flag set true if no semantic tags found"
    value: ${{ steps.parse-tags.outputs.missing }}

runs:
  using: "composite"
  steps:
    - name: "🌦️ Report GitHub environment"
      id: capture-environment
      shell: bash
      run: |
        # Report GitHub workflow environment
        echo "tagged=false" >> $GITHUB_OUTPUT
        if [ ! -z "$GITHUB_REF" ]; then
          echo "Github GITHUB_REF: $GITHUB_REF"
        fi
        if [ ! -z "$GITHUB_BASE_REF" ]; then
          echo "Github GITHUB_BASE_REF: $GITHUB_BASE_REF"
        fi
        if [ ! -z "$GITHUB_HEAD_REF" ]; then
          echo "Github GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
        fi
        if [ ! -z "$GITHUB_REF_NAME" ]; then
          echo "Github GITHUB_REF_NAME: $GITHUB_REF_NAME"
          if [[ "$GITHUB_REF_NAME" =~ ^v[0-9]+\.[0-9]+ ]]; then
            echo "tagged=true" >> $GITHUB_OUTPUT
          fi
        fi
        if [ ! -z "$GITHUB_REF_TYPE" ]; then
          echo "Github GITHUB_REF_TYPE: $GITHUB_REF_TYPE"
        fi
        if [ ! -z "$GITHUB_EVENT_NAME" ]; then
          echo "Github GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
        fi

    - name: "🏷️ Fetch tags"
      shell: bash
      if: steps.capture-environment.outputs.tagged == 'false'
      run: |
        # Workaround for: https://github.com/actions/checkout/issues/1471
        echo "Fetching tags..."
        git fetch --tags

    - name: "🏷️ Parse tags"
      id: parse-tags
      shell: bash
      run: |
        # Extract and report latest semantic tag
        if ! (git tag -l | grep 'v*.*.*' > /dev/null); then
          echo "No semantic tags were found"
          echo "missing=true" >> $GITHUB_OUTPUT
          echo "tag=v0.0.0" >> $GITHUB_OUTPUT
        fi
        tag=$(git tag -l --sort=committerdate | grep -o 'v*.*.*' | sort -r | head -1)
        echo "missing=false" >> $GITHUB_OUTPUT
        echo "tag=${tag}" >> $GITHUB_OUTPUT
        echo "Tag: $tag"
